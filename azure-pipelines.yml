# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'

steps:

- powershell: $version = ($env:Build_SourceBranch -replace 'refs/tags/v',''); echo $version; echo "##vso[task.setvariable variable=version]$version"
  displayName: Get version from tag
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

- powershell: ((Get-Content -path .\CertDump\CertDump.csproj -Raw) -replace '0.0.0',$env:version) | Set-Content -Path .\CertDump\CertDump.csproj
  displayName: Replace version with git tag
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

- powershell: dotnet pack -c Release /p:NativeCompilationDuringPublish=false
  displayName: Pack global tool

- task: NuGetToolInstaller@0
  displayName: Install NuGet
  inputs:
    versionSpec: '5.4.0'

- task: NuGetCommand@2
  displayName: 'Publish tool to NuGet.org'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  inputs:
    command: push
    nuGetFeedType: external
    allowPackageConflicts: true
    publishFeedCredentials: 'Nuget.org'
    packagesToPush: './CertDump/nupkg/*.*nupkg'

- powershell:  dotnet publish -r win-x64 -c release 
  displayName: Build native Windows executable

- powershell: cp .\CertDump\bin\Release\netcoreapp3.1\win-x64\native\CertDump.exe $(Build.ArtifactStagingDirectory)
  displayName: Copy CertDump.exe to "Artifacts Staging Directory"

- task: GitHubRelease@0
  displayName: Create GitHub Release
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  inputs:
    gitHubConnection: 'CertDumpRelease'
    repositoryName: 'secana/CertDump'
    title: 'CertDump Windows x64'
    addChangeLog: false
    assets: $(Build.ArtifactStagingDirectory)/*.exe