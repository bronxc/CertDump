# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- features/*

pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'

steps:

- powershell: echo "##vso[task.setvariable variable=version], ($env:Build_SourceBranch -replace 'ref/tags/v','')"
  displayName: Get version from tag
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

- powershell: ((Get-Content -path .\CertDump\CertDump.csproj -Raw) -replace '0.0.0',$env:version) | Set-Content -Path .\CertDump\CertDump.csproj
  displayName: Replace version with git tag
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

- powershell: dotnet pack -c Release /p:NativeCompilationDuringPublish=false
  displayName: Pack global tool

#- powershell:  dotnet publish -r win-x64 -c release 
#  displayName: Build native Windows executable
#
#- powershell: cp .\CertDump\bin\Release\netcoreapp3.1\win-x64\native\CertDump.exe $(Build.ArtifactStagingDirectory)
#  displayName: Copy CertDump.exe to "Artifacts Staging Directory"
#
#- task: GitHubRelease@0
#  displayName: Create GitHub Release
#  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#  inputs:
#    gitHubConnection: 'CertDumpRelease'
#    repositoryName: 'secana/CertDump'
#    title: 'CertDump Windows x64'
#    addChangeLog: false
#    assets: $(Build.ArtifactStagingDirectory)/*.exe